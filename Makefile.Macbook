
.SUFFIXES:
.PRECIOUS: %.o

# include CPP object files in CPP_OBJS variable, and set some 
# switches (TAU_PROFILE, NON_FT)
include cpp_objs_switches.mk

HDRS=Advect3D.h HaloArray3D.h ProcGrid3D.h Vec3D.h GridCombine3D.h \
	LinGrid3D.h Timer.h
OBJS=Advect3D.o Advect2D.o GridCombine3D.o
PROG=app_raijin_cluster
CCFLAGS=-O3 -fopenmp -std=gnu++0x

# MPI CPP compiler
ifndef MPICPP
  MPICPP := $(shell which mpic++)
endif

# MPI Fortran compiler
ifndef MPIFORTRAN
  MPIFORTRAN := $(shell which mpif90)
endif

# flags related to non-ft mpi
ifeq ($(NON_FT),yes)
  CPPFLAGS += -DNON_FT
  FFLAGS += -DNON_FT
endif

# Fortran include directory
F_INCLUDE_DIR = ${PETSC_DIR}/include

# CPP include directory
CPP_INCLUDE_DIR = ${PETSC_DIR}/include

# Fortran flags
FFLAGS += -I$(F_INCLUDE_DIR)

# CPP flags
CPPFLAGS += -I$(CPP_INCLUDE_DIR) -O3 -fopenmp -std=gnu++0x

# CPP link libs
CPP_LINK_LIBS = -L$(PETSC_DIR)/lib -lglpk -lmpi_cxx -lstdc++ -lgomp

# Other libs
OTHER_LIBS = -L/usr/X11/lib

FORTRAN_OBJS = AppWrap.o \
	       AppWrapPassField.o

all: FORTRAN CPP LINK

FORTRAN:
	$(MPIFORTRAN) $(FFLAGS) -c  -fPIC -Wall -Wno-unused-variable -ffree-line-length-0 -Wno-unused-dummy-argument -g -O0 -o AppWrap.o AppWrap.F90
	
	$(MPIFORTRAN) $(FFLAGS) -c  -fPIC -Wall -Wno-unused-variable -ffree-line-length-0 -Wno-unused-dummy-argument -g -O0 -o AppWrapPassField.o AppWrapPassField.F90

CPP: $(CPP_OBJS)

%.o: %.cpp $(HDRS)
	$(MPICPP) $(CPPFLAGS) -c $*.cpp	

LINK:
	$(MPIFORTRAN) -fPIC -Wall -Wno-unused-variable -ffree-line-length-0 -Wno-unused-dummy-argument -g -O0 -o $(PROG) $(FORTRAN_OBJS)  $(CPP_OBJS) $(OTHER_LIBS) -lpetsc -lflapack -lfblas -lssl -lcrypto -lX11 -lpthread -lhwloc -lmpi_f90 -lmpi_f77 -lm -lgfortran -lquadmath -lmpi_cxx -lstdc++ -ldl -lmpi -lutil -lpthread -ldl $(CPP_LINK_LIBS)

clean:
	rm -f *.o $(PROG)
run2d:
	mpirun -np 14 ./$(PROG) -v 1 -2 -p 1 -q 1 -r 1 -l 5 6 6 0 # -F option for visualization

#include ${PETSC_DIR}/conf/test
